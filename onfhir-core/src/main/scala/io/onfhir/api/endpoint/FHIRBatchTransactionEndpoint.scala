package io.onfhir.api.endpoint

import akka.http.scaladsl.server.Directives._
import akka.http.scaladsl.server.Route
import io.onfhir.api.FHIR_HTTP_OPTIONS
import io.onfhir.api.Resource
import io.onfhir.api.model.FHIRRequest
import io.onfhir.api.model.FHIRMarshallers._
import io.onfhir.api.service.FHIRBatchTransactionService
import io.onfhir.authz.{AuthContext, AuthzContext, AuthzManager}
import io.onfhir.config.OnfhirConfig


trait FHIRBatchTransactionEndpoint {

  // IMPORTANT! There is a bug for val definition of route if its path does not have any segment
  // so lazy val definition is used. The problem could be regenerated by converting lazy val to val
  // and then executing the tests. Moreover, in that case if you convert entity(as[Resource]) statement
  // to entity(as[String]) the problem dissapears.
  // Route definition of a bundle request
  def batchRoute(fhirRequest: FHIRRequest, authContext:(AuthContext, Option[AuthzContext])):Route = {
    pathEndOrSingleSlash {
      post {
          optionalHeaderValueByName(FHIR_HTTP_OPTIONS.PREFER) { prefer =>
            entity(as[Resource]) { resource =>
              //Set the bundle into the request
              fhirRequest.initializeTransactionOrBatchRequest(resource, prefer)
              //Enforce authorization
              AuthzManager.authorize(authContext._2, fhirRequest) {
                //Execute the interaction
                complete {
                  new FHIRBatchTransactionService().executeInteraction(fhirRequest, authContext._2)
                }
              }
            }
          }
      }
    }
  }
}